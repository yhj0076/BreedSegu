using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class RythmMaker_Test : MonoBehaviour
{
    public GameObject MusicControl;
    public GameObject Notes;
    public GameObject Life;
    public double BPM;
    [SerializeField]
    public GameObject[] note;
    double[] GenTiming;
    int GenIndex = 0;
    public int GenLength;
    double time = 0;
    public double TimeIndex = 0;

    bool end = false;

    // Start is called before the first frame update
    void OnEnable()
    {
        end = false;
        GenIndex = 0;
        TimeIndex = 0;
        time = 0;
        switch (MusicControl.GetComponent<StartMusicDelay>().MusicIndex)
        {
            case 0:
                BPM = 75d;
                GenTiming = new double[] 
                {2.5625,
                 2.75,
                 3,
                 3.25,
                 3.5,
                 3.75,
                 4,
                 4.25,
                 4.375,
                 4.5,
                 4.625,
                 4.75,
                 4.875,
                 4.9375,
                 5,
                 5.125,
                 5.25,
                 5.375,
                 5.4375,
                 5.5,
                 5.625,
                 5.75,
                 5.875,
                 5.9375,
                 6,
                 6.125,
                 6.25,
                 6.375,
                 6.4375,
                 6.5,
                 6.75,
                 6.875,
                 6.9375,
                 7.125,
                 7.25,
                 7.375,
                 7.4375,
                 7.5,
                 7.75,
                 7.875,
                 7.9375,
                 8.125,
                 8.25,
                 8.375,
                 8.4375,
                 8.5,
                 8.75,
                 8.875,
                 8.9375,
                 9.125,
                 9.25,
                 9.375,
                 9.4375,
                 9.5,
                 9.75,
                 9.875,
                 9.9375,
                 10.125,
                 10.25,
                 10.375,
                 10.4375,
                 10.5,
                 10.75,
                 10.875,
                 10.9375,
                 11.125,
                 11.25,
                 11.375,
                 11.4375,
                 11.5,
                 11.75,
                 11.875,
                 11.9375,
                 12.125,
                 12.25,
                 12.375,
                 12.4375,
                 12.5,
                 12.75,
                 12.875,
                 12.9375,
                 13.125,
                 13.25,
                 13.375,
                 13.4375,
                 13.5,
                 13.75,
                 13.875,
                 13.9375,
                 14.125,
                 14.25,
                 14.375,
                 14.4375,
                 14.5,
                 14.625,
                 14.75,
                 14.875,
                 14.9375,
                 15,
                 15.125,
                 15.25,
                 15.375,
                 15.4375,
                 15.5,
                 15.625,
                 15.75,
                 15.875,
                 15.9375,
                 16,
                 16.125,
                 16.25,
                 16.375,
                 16.4375,
                 16.5,
                 16.625,
                 16.75,
                 16.875,
                 16.9375,
                 17,
                 17.125,
                 17.25,
                 17.375,
                 17.4375,
                 17.5,
                 17.625,
                 17.75,
                 17.875,
                 17.9375,
                 18,
                 18.125,
                 18.25,
                 18.375,
                 18.4375,
                 18.5,
                 18.75,
                 19,
                 19.25,
                 19.5,
                 19.75,
                 20,
                 20.25,
                 20.5,
                 20.625,
                 20.75,
                 20.875,
                 21,
                 21.125,
                 21.25,
                 21.375,
                 21.5,
                 21.5625,
                 21.625,
                 21.6875,
                 21.75,
                 21.8125,
                 21.875,
                 21.9375,
                 22,
                 22.25,
                 22.5,
                 22.75,
                 22.875,
                 23,
                 23.0625,
                 23.125,
                 23.1875,
                 23.25,
                 23.3125,
                 23.375,
                 23.4375,
                 23.5,
                 23.625,
                 23.6875,
                 23.75,
                 23.875,
                 24,
                 24.0625,
                 24.125,
                 24.1875,
                 24.25,
                 24.3125,
                 24.375,
                 24.5,
                 24.75,
                 24.875,
                 25,
                 25.0625,
                 25.125,
                 25.1875,
                 25.25,
                 25.3125,
                 25.375,
                 25.4375,
                 25.5,
                 25.625,
                 25.6875,
                 25.75,
                 25.875,
                 25.9375,
                 26,
                 26.3125,
                 26.375,
                 26.5,
                 26.625,
                 26.75,
                 26.875,
                 27,
                 27.0625,
                 27.125,
                 27.1875,
                 27.25,
                 27.3125,
                 27.375,
                 27.4375,
                 27.5,
                 27.625,
                 27.6875,
                 27.75,
                 27.875,
                 28,
                 28.0625,
                 28.125,
                 28.1875,
                 28.25,
                 28.3125,
                 28.375,
                 28.4375,
                 28.5,
                 28.75,
                 28.875,
                 29,
                 29.0625,
                 29.125,
                 29.1875,
                 29.25,
                 29.3125,
                 29.375,
                 29.4375,
                 29.5,
                 29.625,
                 29.6875,
                 29.75,
                 29.875,
                 29.9375,
                 30,
                 30.0625,
                 30.125,
                 30.25,
                 30.3125,
                 30.375,
                 30.5,
                 30.8125,
                 30.875,
                 31,
                 31.0625};
                GenLength = GenTiming.Length;
                break;
            case 1:
                BPM = 100d;
                GenTiming = new double[]
                    {1,
                     1.125,
                     1.25,
                     1.375,
                     1.5,
                     1.625,
                     1.75,
                     1.875,
                     2,
                     2.125,
                     2.25,
                     2.375,
                     2.5,
                     2.625,
                     2.75,
                     2.875,
                     3,
                     3.125,
                     3.25,
                     3.375,
                     3.5,
                     4,
                     4.25,
                     4.5,
                     5.5,
                     5.75,
                     6,
                     6.25,
                     6.5,
                     6.75,
                     7,
                     7.25,
                     7.5,
                     7.75,
                     8,
                     8.5,
                     8.75,
                     8.875,
                     9,
                     9.125,
                     9.25,
                     9.5,
                     9.75,
                     10,
                     10.25,
                     10.5,
                     10.625,
                     10.75,
                     11,
                     11.5,
                     11.75,
                     11.875,
                     12,
                     12.125,
                     12.25,
                     12.5,
                     12.75,
                     13,
                     13.25,
                     13.5,
                     13.75,
                     13.8125,
                     13.875,
                     13.9375,
                     14,
                     14.25,
                     14.5,
                     14.75,
                     15,
                     15.25,
                     15.3125,
                     15.375,
                     15.5,
                     15.75,
                     16,
                     16.0625,
                     16.125,
                     16.25,
                     16.5,
                     16.75,
                     17.5};
                GenLength = GenTiming.Length;
                break;
            case 2:
                BPM = 184d;
                GenTiming = new double[] 
                {2,
                 2.25,
                 2.625,
                 2.875,
                 3.5,
                 4,
                 4.25,
                 4.625,
                 4.875,
                 5.5,
                 6,
                 6.25,
                 6.625,
                 6.875,
                 7.5,
                 7.875,
                 8,
                 8.25,
                 8.625,
                 9,
                 9.25,
                 9.5,
                 9.625,
                 9.75,
                 10,
                 10.25,
                 10.5,
                 10.625,
                 11,
                 11.5,
                 12,
                 12.25,
                 12.5,
                 12.625,
                 12.75,
                 13,
                 13.5,
                 14,
                 14.25,
                 14.5,
                 14.625,
                 15,
                 15.5,
                 16,
                 16.25,
                 16.5,
                 16.625,
                 16.875,
                 17.5,
                 18,
                 18.25,
                 18.5,
                 18.75,
                 19,
                 19.25,
                 19.5,
                 19.75,
                 20,
                 20.25,
                 20.5,
                 20.75,
                 21,
                 21.25,
                 21.5,
                 22,
                 22.25,
                 22.375,
                 22.75,
                 23,
                 23.125,
                 23.375,
                 23.75,
                 24,
                 24.125,
                 24.25,
                 24.375,
                 24.75,
                 25,
                 25.25,
                 25.375,
                 25.5,
                 25.75,
                 26,
                 26.25,
                 26.5,
                 26.625,
                 26.875,
                 27.5,
                 28,
                 28.25,
                 28.5,
                 28.625,
                 28.875,
                 29.5,
                 30,
                 30.25,
                 30.5,
                 30.625,
                 30.875,
                 32,
                 32.25,
                 32.5,
                 32.625,
                 32.875,
                 33.5,
                 33.625,
                 33.75,
                 34,
                 35,
                 36,
                 37,
                 38,
                 38.5,
                 39,
                 39.5,
                 39.75,
                 40,
                 40.25,
                 40.5,
                 40.75,
                 41,
                 41.25,
                 41.5,
                 42,
                 42.25,
                 42.5,
                 42.625,
                 43,
                 43.5,
                 44,
                 44.25,
                 44.5,
                 44.625,
                 44.75,
                 45,
                 45.5,
                 46,
                 46.25,
                 46.5,
                 46.625,
                 47,
                 47.5,
                 48,
                 48.25,
                 48.5,
                 48.625,
                 49,
                 49.5,
                 50,
                 50.25,
                 50.5,
                 50.625,
                 51,
                 51.5,
                 52,
                 52.25,
                 52.5,
                 52.625,
                 52.75,
                 53,
                 53.5,
                 54,
                 54.25,
                 54.5,
                 54.625,
                 55,
                 55.5,
                 56,
                 56.25,
                 56.5,
                 56.625,
                 57,
                 57.5,
                 58,
                 58.25,
                 58.625,
                 58.875,
                 59.5,
                 60,
                 60.25,
                 60.625,
                 60.875,
                 62,
                 62.25,
                 62.625,
                 62.875,
                 64,
                 64.25,
                 64.625,
                 64.875,
                 65.5};
                GenLength = GenTiming.Length;
                break;
            default:
                BPM = 75d;
                GenTiming = new double[]
                {0};
                GenLength = GenTiming.Length;
                break;
        }

    }

    //0초에 만들 시 3.36초에 도착
    private void Update()
    {
        FourPerFour();
        if (GenIndex == GenTiming.Length&&end==false)
        {
            MusicControl.GetComponent<StartMusicDelay>().delayGo();
            end = true;
        }
    }

    void FourPerFour()
    {
        time += Time.deltaTime;
        if (time >= 60d / (BPM * 4))
        {
            int index = Random.Range(0, 4);
            if (GenIndex < GenTiming.Length)
            {
                if (GenTiming[GenIndex] == TimeIndex)
                {
                    switch(index)
                    {
                        case 0:
                            GameObject.Instantiate(note[index], transform.position + new Vector3(-0.8f, 0, 0), Quaternion.identity).transform.parent = Notes.transform;
                            break;
                        case 1:
                            GameObject.Instantiate(note[index], transform.position + new Vector3(2.4f, 0, 0), Quaternion.identity).transform.parent = Notes.transform;
                            break;
                        case 2:
                            GameObject.Instantiate(note[index], transform.position + new Vector3(-2.4f, 0, 0), Quaternion.identity).transform.parent = Notes.transform;
                            break;
                        case 3:
                            GameObject.Instantiate(note[index], transform.position + new Vector3(0.8f, 0, 0), Quaternion.identity).transform.parent = Notes.transform;
                            break;
                    }
                    GenIndex++;
                }
            }
            time -= 60d / (BPM * 4);
            TimeIndex = TimeIndex + 0.0625d;
        }
    }
}
